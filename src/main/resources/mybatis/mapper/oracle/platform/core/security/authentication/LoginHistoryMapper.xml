<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.jwebppy.platform.core.security.authentication.mapper.LoginHistoryMapper">

	<resultMap type="LoginHistoryEntity" id="loginHistoryEntityMap">
		<id property="lhSeq" column="lh_seq" />
		<result property="username" column="username" />
		<result property="sessionId" column="session_id" />
		<result property="ip" column="ip" />
		<result property="referer" column="referer" />
		<result property="userAgent" column="user_agent" />
		<result property="accountLockedDate" column="account_locked_date" />
		<result property="uSeq" column="u_seq" />
		<result property="fgResult" column="fg_result" />
		<result property="timezone" column="timezone" />
		<result property="regDate" column="reg_date" />
		<result property="authenticationType" column="auth_type" />
	</resultMap>

	<insert id="insertLoginHistory" parameterType="LoginHistoryEntity">
		insert into pltf_login_history (lh_seq, username, session_id, ip, referer, user_agent, account_locked_date, u_seq, fg_result, timezone, reg_date, auth_type) values
		(
			pltf_lh_seq.nextval, #{username}, #{sessionId}, #{ip}, #{referer}, #{userAgent}, #{accountLockedDate}, #{uSeq}, #{fgResult}, #{timezone}, #{regDate}, #{authenticationType}
		)
	</insert>
	
	<select id="findPageableLoginHistories" parameterType="LoginHistorySearchDto" resultMap="loginHistoryEntityMap">
		<include refid="PaginationMapper.header"/>
		
		select
		a.*
		from
		pltf_login_history a

		<where>
			<trim prefixOverrides="and">
				<if test="uSeq != null">					
					and a.u_seq=#{uSeq}
				</if>
						
				<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(username)">
					and a.username=#{username}
				</if>
			
				<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(fgResult)">
					and a.fg_result=#{fgResult}
				</if>
				
				<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(query)">
					and (upper(a.username) like '%' || upper(#{query}) || '%' or upper(a.ip) like '%' || upper(#{query}) || '%' or upper(a.user_agent) like '%' || upper(#{query}) || '%')
				</if>
				
				<choose>
					<when test="fromDate != null and toDate != null">
						and a.reg_date <![CDATA[>]]> #{fromDate} and a.reg_date <![CDATA[<=]]> #{toDate}
					</when>
					<when test="fromDate != null">
						and a.reg_date <![CDATA[>]]> #{fromDate}
					</when>
					<when test="toDate != null">
						and a.reg_date <![CDATA[<=]]> #{toDate}
					</when>
				</choose>				
			</trim>
		</where>
		
		order by a.reg_date desc
		
		<include refid="PaginationMapper.footer"/>
	</select>
	
	<select id="findLoginFailureCount" parameterType="LoginHistorySearchDto" resultType="int">
		select
		count(reg_date)
		from
		pltf_login_history
		where
		username=#{username}
		and fg_result='N'
		and reg_date>(
		    select
		    nvl(max(reg_date), sysdate)
		    from
		    pltf_login_history
		    where
		    username=#{username}
		    and fg_result='N'
		    and account_locked_date is not null
        )	
	</select>
</mapper>
