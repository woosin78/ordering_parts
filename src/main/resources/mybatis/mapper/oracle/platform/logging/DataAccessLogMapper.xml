<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.jwebppy.platform.mgmt.logging.mapper.DataAccessLogMapper">
	<resultMap type="DataAccessLogEntity" id="dataAccessLogMap">
		<id property="dlSeq" column="dl_seq" />
		<result property="type" column="type" />
		<result property="command" column="command" />
		<result property="className" column="class_name" />
		<result property="methodName" column="method_name" />
		<result property="destination" column="destination" />
		<result property="startTime" column="start_time" />
		<result property="elapsed" column="elapsed" />
		<result property="requestId" column="request_id" />
		<result property="requestUri" column="request_uri" />
		<result property="referer" column="referer" />
		<result property="sessionId" column="session_id" />
		<result property="error" column="error" />
		<result property="timezone" column="timezone" />
		<result property="regUsername" column="reg_username" />
		<result property="regDate" column="reg_date" />
		<collection property="dataAccessLogParameters" foreignColumn="dl_seq" column="dl_seq" javaType="java.util.ArrayList" ofType="DataAccessLogParameterEntity" select="findDataAccessLogParameters" />
	</resultMap>
	
	<resultMap type="DataAccessLogParameterEntity" id="dataAccessLogParameterMap">
		<id property="dlpSeq" column="dlp_seq" />
		<result property="dlSeq" column="dl_seq" />
		<result property="type" column="type" />
		<result property="name" column="name" />
		<collection property="dataAccessLogParameterDetails" foreignColumn="dlp_seq" column="dlp_seq" javaType="java.util.ArrayList" ofType="DataAccessLogParameterDetailEntity" select="findDataAccessLogParameterDetails" />
	</resultMap>

	<insert id="insertDataAccessLog" parameterType="DataAccessLogEntity">
		insert into pltf_dacs_log (dl_seq, type, command, class_name, method_name, destination, start_time, elapsed, request_id, request_uri, referer, session_id, error, timezone, reg_username, reg_date) values (
			#{dlSeq}, #{type}, #{command}, #{className}, #{methodName}, #{destination}, #{startTime}, #{elapsed}, #{requestId}, #{requestUri}, #{refererUri}, #{sessionId}, #{error}, #{timezone}, #{regUsername}, #{regDate}
		)
	</insert>

	<insert id="insertDataAccessLogParameter" parameterType="DataAccessLogParameterEntity" useGeneratedKeys="true" keyProperty="dlpSeq">
		<selectKey keyProperty="dlpSeq" resultType="long" order="BEFORE">
			select pltf_dlp_seq.nextval from dual
		</selectKey>

		insert into pltf_dacs_log_param (dlp_seq, dl_seq, type, name) values (
			#{dlpSeq}, #{dlSeq}, #{type}, #{name}
		)
	</insert>

	<insert id="insertDataAccessLogParameterDetail" parameterType="DataAccessLogParameterDetailEntity">
		insert into pltf_dacs_log_param_detail (dlp_seq, line_no, name, value) values (
			#{dlpSeq}, #{lineNo}, #{name}, #{value}
		)
	</insert>

	<insert id="updateDataAccessLog" parameterType="DataAccessLogEntity">
		update pltf_dacs_log set
			destination=#{destination},
			start_time=#{startTime},
			elapsed=#{elapsed},
			error=#{error}
		where
			dl_seq=#{dlSeq}
	</insert>

	<select id="findLog" parameterType="String" resultMap="dataAccessLogMap">
		select
		a.*
		from
		pltf_dacs_log a
		where
		a.dl_seq=#{dlSeq}
	</select>

	<select id="findPageableLogs" parameterType="DataAccessLogSearchDto" resultType="DataAccessLogEntity">
		<include refid="PaginationMapper.header"/>

		select
		a.*
		from
		pltf_dacs_log a
		
		<where>
			<choose>
				<when test="fromDate != null and toDate != null">
					a.start_time <![CDATA[>]]> #{fromDateToMs} and a.start_time <![CDATA[<=]]> #{toDateToMs}
				</when>
				<when test="fromDate != null">
					a.start_time <![CDATA[>]]> #{fromDateToMs}
				</when>
				<when test="toDate != null">
					a.start_time <![CDATA[<=]]> #{toDateToMs}
				</when>			
			</choose>			
		
			<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(type)">
				and a.type=#{type}
			</if>
			
			<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(command)">
				and upper(a.command) like '%'||upper(#{command})||'%'
			</if>				
			
			<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(regUsername)">
				and upper(a.reg_username) like '%'||upper(#{regUsername})||'%'
			</if>				
			
			<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(query)">
				and (
					upper(a.class_name) like '%'||upper(#{query})||'%') or
					upper(a.method_name) like '%'||upper(#{query})||'%')
				)
			</if>			
		</where>
		
		order by a.reg_date desc

		<include refid="PaginationMapper.footer"/>
	</select>

	<select id="findDataAccessLogParameters" parameterType="String" resultMap="dataAccessLogParameterMap">
		select
		a.*
		from
		pltf_dacs_log_param a
		where
		a.dl_seq=#{dlSeq}
		order by a.dlp_seq
	</select>
	
	<select id="findDataAccessLogParameterDetails" parameterType="Long" resultType="DataAccessLogParameterDetailEntity">
		select
		a.*
		from
		pltf_dacs_log_param_detail a
		where
		a.dlp_seq=#{dlpSeq}
		order by line_no		
	</select>
	
	<select id="findExecutedSapRfc">
		select
		command,
		dl_seq,
		reg_date
		from
		pltf_dacs_log
		where
		command=#{command}
		and reg_username=#{regUsername}
		and start_time=1664658117264
		and referer='/portal/iv/hq/parts/domestic/order/status/list'	
	</select>
	
	<select id="findExecutedSapRfcOnPage" parameterType="DataAccessLogSearchDto" resultType="DataAccessLogEntity">
		select
		x.*,
		(
			select
			dl_seq
			from
			pltf_dacs_log
			where
			command=x.command
			and referer=x.referer
			and reg_username=x.reg_username
			and start_time=x.start_time
			and reg_date=x.reg_date
		) dl_seq
		from
		(
		    select
		    a.command,
			max(b.referer) referer,
		    max(b.start_time) start_time,
			max(b.reg_username) reg_username,
		    max(b.reg_date) reg_date
		    from
		    pltf_sap_rfc_info1 a,
		    (
		        select
				command,
		        class_name,
		        method_name,
		        start_time,
				referer,
				reg_username,
		        reg_date
		        from
		        pltf_dacs_log
		        where
		        reg_username=#{regUsername}
		        and referer=#{referer}
		        and reg_date>sysdate-1
		    ) b
		    where
		    a.referer=#{referer}
		    and a.class_name=b.class_name(+)
		    and a.method_name=b.method_name(+)
		    group by a.command
		) x
		order by nvl(x.start_time, -1) desc, x.command
	</select>

</mapper>