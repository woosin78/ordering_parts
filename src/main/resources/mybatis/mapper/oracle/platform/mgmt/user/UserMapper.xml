<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.jwebppy.platform.mgmt.user.mapper.UserMapper">

	<resultMap type="UserEntity" id="userEntityMap">
		<id property="useq" column="u_seq" />
		<result property="firstName" column="first_name" />
		<result property="lastName" column="last_name" />
		<result property="enFirstName" column="en_first_name" />
		<result property="enLastName" column="en_last_name" />
		<result property="company" column="company" />
		<result property="organization" column="organization" />
		<result property="department" column="department" />
		<result property="position" column="position" />
		<result property="language" column="language" />		
		<result property="fgDelete" column="fg_delete" />
		<result property="pageNumber" column="page_number" />
		<result property="rowPerPage" column="row_per_page" />
		<result property="totalCount" column="total_count" />
		<association property="userAccount" foreignColumn="u_seq" column="u_seq" javaType="UserAccountEntity" select="findUserAccount" />
		<association property="userContactInfo" foreignColumn="u_seq" column="u_seq" javaType="UserContactInfoEntity" select="findUserContactInfo" />
		<association property="userGroup" foreignColumn="ug_seq" column="ug_seq" javaType="UserGroupEntity" select="org.jwebppy.platform.mgmt.user.mapper.UserGroupMapper.findUserGroup" />		
	</resultMap>
	
	<resultMap type="UserAccountEntity" id="userAccountEntityMap">
		<id property="useq" column="u_seq" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="fgNoUsePassword" column="fg_no_use_password" />
		<result property="fgAccountLocked" column="fg_account_locked" />
		<result property="fromValid" column="from_valid" />
		<result property="toValid" column="to_valid" />		
		<result property="regUsername" column="reg_username" />
		<result property="regDate" column="reg_date" />
		<result property="modUsername" column="mod_username" />
		<result property="modDate" column="mod_date" />
		<association property="credentialsPolicy" foreignColumn="cp_seq" column="cp_seq" javaType="CredentialsPolicyEntity" select="org.jwebppy.platform.mgmt.user.mapper.CredentialsPolicyMapper.findCredentialsPolicy" />
		<association property="userPasswordChangeHistory" foreignColumn="u_seq" column="u_seq" javaType="UserPasswordChangeHistoryEntity" select="org.jwebppy.platform.mgmt.user.mapper.UserPasswordChangeHistoryMapper.findLastUserPasswordChangeHistory" />
	</resultMap>
	
	<insert id="insertUser" parameterType="UserEntity" useGeneratedKeys="true" keyProperty="useq">
		<selectKey keyProperty="useq" resultType="Integer" order="BEFORE">
			select pltf_u_seq.nextval from dual
		</selectKey>

		insert into pltf_user (u_seq, first_name, last_name, en_first_name, en_last_name, company, organization, department, position, language, ug_seq, fg_delete, reg_username, reg_date) values
		(
			#{useq}, #{firstName}, #{lastName}, #{enFirstName}, #{enLastName}, #{company}, #{organization}, #{department}, #{position}, #{language}, #{userGroup.ugSeq}, #{fgDelete}, #{regUsername}, #{regDate}
		)
	</insert>

	<insert id="insertUserAccount" parameterType="UserAccountEntity">
		insert into pltf_user_account (u_seq, username, password, fg_account_locked, fg_password_locked, fg_no_use_password, from_valid, to_valid, cp_seq, reg_username, reg_date) values (
			#{useq}, upper(#{username}), #{password}, #{fgAccountLocked}, #{fgPasswordLocked}, #{fgNoUsePassword}, #{fromValid}, #{toValid}, #{credentialsPolicy.cpSeq}, #{regUsername}, #{regDate}
		)
	</insert>

	<insert id="insertUserContactInfo" parameterType="UserContactInfoEntity">
		insert into pltf_user_contact_info (u_seq, email, tel1, tel2, tel3, mobile1, mobile2, mobile3, fax1, fax2, fax3, zipcode, city, state, country, timezone, reg_username, reg_date) values (
			#{useq}, #{email}, #{tel1}, #{tel2}, #{tel3}, #{mobile1}, #{mobile2}, #{mobile3}, #{fax1}, #{fax2}, #{fax3}, #{zipcode}, #{city}, #{state}, #{country}, #{timezone}, #{regUsername}, #{regDate}
		)
	</insert>
	
	<insert id="insertUserPasswordChangeHistory" parameterType="UserPasswordChangeHistoryEntity">
		insert into pltf_user_pwd_change_history (u_seq, old_password, timezone, reg_username, reg_date) values (
			#{useq}, (select password from pltf_user_account where u_seq=#{useq}), #{timezone}, #{regUsername}, #{regDate}
		)
	</insert>

	<update id="updateUser" parameterType="UserEntity">
		update pltf_user set
			first_name=#{firstName},
			last_name=#{lastName},
			en_first_name=#{enFirstName},
			en_last_name=#{enLastName},			
			company=#{company},
			organization=#{organization},
			department=#{department},
			position=#{position},
			language=#{language},
			ug_seq=#{userGroup.ugSeq},
			mod_username=#{modUsername},
			mod_date=#{modDate}
		where
			u_seq=#{useq}
	</update>
	
	<update id="updateUserAccount" parameterType="UserAccountEntity">
		update pltf_user_account set
			password=decode(nvl(#{password}, ''), '', password, #{password}),
			fg_account_locked=#{fgAccountLocked},
			fg_password_locked=#{fgPasswordLocked},
			fg_no_use_password=#{fgNoUsePassword},
			from_valid=#{fromValid},
			to_valid=#{toValid},
			cp_seq=#{credentialsPolicy.cpSeq},
			mod_username=#{modUsername},
			mod_date=#{modDate}
		where
			u_seq=#{useq}
	</update>	
	
	<update id="updateUserContactInfo" parameterType="UserContactInfoEntity">
		update pltf_user_contact_info set
			email=#{email},
			tel1=#{tel1},
			tel2=#{tel2},
			tel3=#{tel3},
			mobile1=#{mobile1},
			mobile2=#{mobile2},
			mobile3=#{mobile3},
			fax1=#{fax1},
			fax2=#{fax2},
			fax3=#{fax3},
			zipcode=#{zipcode},
			street=#{street},
			city=#{city},
			state=#{state},
			country=#{country},
			timezone=#{timezone},
			mod_username=#{modUsername},
			mod_date=#{modDate}
		where
			u_seq=#{useq}
	</update>

	<update id="updateFgAccountLocked" parameterType="UserAccountEntity">
		update pltf_user_account set
			fg_account_locked=#{fgAccountLocked},
			mod_username=#{modUsername},
			mod_date=#{modDate}
		where
			u_seq=#{useq}
	</update>
	
	<update id="delete" parameterType="UserEntity">
		update pltf_user set
			fg_delete='Y',
			mod_username=#{modUsername},
			mod_date=#{modDate}
		where
			u_seq=#{useq}
	</update>

	<update id="updateUsernameToDelete" parameterType="UserEntity">
		update pltf_user_account set
			username=u_seq||'_'||username,
			mod_username=#{modUsername},
			mod_date=#{modDate}
		where
			u_seq=#{useq}
	</update>
	
	<update id="updateFgPasswordLocked" parameterType="UserAccountEntity">
		update pltf_user_account set
			fg_password_locked=#{fgPasswordLocked},
			mod_username=#{modUsername},
			mod_date=#{modDate}
		where
			u_seq=#{useq}
	</update>

	<select id="findUser" parameterType="UserSearchDto" resultMap="userEntityMap">
		select
		*
		from
		vw_pltf_user

		<where>
			<if test="useq != null">
				and u_seq=#{useq}
			</if>
			<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(username)">
				and username=upper(#{username})
			</if>
		</where>
	</select>
	
	<select id="findUserAccount" parameterType="Integer" resultMap="userAccountEntityMap">
		select
		*
		from
		pltf_user_account
		where
		u_seq=#{useq}
	</select>
	
	<select id="findUserContactInfo" parameterType="Integer" resultType="UserContactInfoEntity">
		select 
		*
		from
		pltf_user_contact_info
		where
		u_seq=#{useq}
	</select>		
	
	<select id="findPageableUsers" parameterType="UserSearchDto" resultMap="userEntityMap">
		<include refid="PaginationMapper.header"/>

		select
		a.*,
		b.email,
		b.tel1,
		b.tel2,
		b.tel3,
		b.mobile1,
		b.mobile2,
		b.mobile3,
		b.fax1,
		b.fax2,
		b.fax3,
		b.zipcode,
		b.city,
		b.state,
		b.country,
		b.timezone
		from
		vw_pltf_user a
		left outer join pltf_user_contact_info b
		on a.u_seq=b.u_seq
		
		<where>
			<trim prefix="(" suffix=")" prefixOverrides="or">
				<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(query)">
					a.username like '%'||upper(trim(#{query}))||'%'
					or upper(a.last_name) like '%'||upper(trim(#{query}))||'%'
					or upper(a.first_name) like '%'||upper(trim(#{query}))||'%'
					or upper(b.email) like '%'||upper(trim(#{query}))||'%'
				</if>
				
				<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(useq)">
					or a.u_seq=#{useq}
				</if>
			</trim>
			
			<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(username)">
				a.username like '%'||upper(trim(#{username}))||'%'
			</if>
			
			<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(usernames)">
				<foreach collection="usernames" item="username" open="(" close=")" separator="or">
					a.username=upper(#{username})
				</foreach>
			</if>
			
			<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(ugSeq)">
				 a.ug_seq=#{ugSeq}
			</if>
			
			<if test="@org.jwebppy.platform.core.util.CmMyBatisQueryUtils@isNotEmpty(cseq)">
				exists (
				    select
				    1
				    from
				    pltf_citem x,
				    pltf_citem_user_rl y
				    where
				    x.c_seq=#{cseq}    
				    and x.c_seq=y.c_seq
				    and x.fg_delete='N'
				    and x.c_seq=y.c_seq
				    and y.u_seq=a.u_seq
				    and y.fg_delete='N'
				)
			</if>
		</where>
		
		order by a.u_seq desc
		
		<include refid="PaginationMapper.footer"/>
	</select>

	<select id="findUsersInCItem" parameterType="UserSearchDto" resultMap="userEntityMap">
		select
		c.*
		from
		pltf_citem a,
		pltf_citem_user_rl b,
		pltf_user c
		where
		a.c_seq=#{cseq}
		and a.fg_delete='N'
		and a.c_seq=b.c_seq
		and b.fg_delete='N'
		and b.u_seq=c.u_seq
		and c.fg_delete='N'
	</select>
	
</mapper>
