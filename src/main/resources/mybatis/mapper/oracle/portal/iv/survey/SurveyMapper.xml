<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.jwebppy.portal.iv.survey.mapper.SurveyMapper">
	<resultMap type="SurveyEntity" id="surveyEntityMap">
		<id property="sSeq" column="s_seq" />
		<result property="title" column="title" />
		<result property="description" column="description" />
		<result property="validFrom" column="valid_from" />
		<result property="validTo" column="valid_to" />
		<result property="fgOpen" column="fg_open" />
		<result property="fgOpenResult" column="fg_open_result" />
		<result property="remark" column="remark" />
		<result property="fgDelete" column="fg_delete" />
		<result property="regUsername" column="reg_username" />
		<result property="regDate" column="reg_date" />
		<result property="modUsername" column="mod_username" />
		<result property="modDate" column="mod_date" />
		<result property="fgStatus" column="fg_status" />
		<result property="applier" column="applier" />
		<result property="fgApply" column="fg_apply" />
		<collection property="uploadFileLists" foreignColumn="s_seq" column="s_seq" javaType="java.util.ArrayList" ofType="EpUploadFileListEntity" select="findUploadFileLists" />
		<collection property="surveyTargets" foreignColumn="s_seq" column="s_seq" javaType="java.util.ArrayList" ofType="SurveyTargetEntity" select="org.jwebppy.portal.iv.survey.mapper.SurveyTargetMapper.findSurveyTargets" />
	</resultMap>	

	<select id="findSurvey" resultMap="surveyEntityMap">
	select
		a.s_seq,
		title,
		description,
		valid_from,
		valid_to,
		to_char(to_date(valid_from, 'YYYY.MM.DD HH24:MI'), 'YYYY.MM.DD') validFromYmd,
		to_char(to_date(valid_from, 'YYYY.MM.DD HH24:MI'), 'YYYY.MM.DD HH24:MI') validFromYmdHHMI,
		to_char(to_date(valid_to, 'YYYY.MM.DD HH24:MI'), 'YYYY.MM.DD') validToYmd,
		to_char(to_date(valid_to, 'YYYY.MM.DD HH24:MI'), 'YYYY.MM.DD HH24:MI') validToYmdYmdHHMI,
		fg_open,
		fg_open_result,
		reg_username,
		remark
	from 
	ep_survey a
	where
	a.s_seq=#{sSeq}
	and a.fg_delete='N'
	</select>
	
	<select id="findSurveys" parameterType="SurveySearchDto" resultMap="surveyEntityMap">
		select
		    a.s_seq,
		    case 
		    	when sysdate <![CDATA[<]]> to_date(a.valid_from,'YYYYMMDDHH24MI') then '1'
		        when sysdate between to_date(a.valid_from,'YYYYMMDDHH24MI') and to_date(a.valid_to,'YYYYMMDDHH24MI') and a.fg_open = 'Y' then '2'
		        when sysdate <![CDATA[>]]> to_date(a.valid_to,'YYYYMMDDHH24MI') and a.fg_open = 'Y' then '3'
		        else '0' 
		    end fg_status,
		    a.valid_from,
		    a.valid_to,
		    to_char(to_date(a.valid_from, 'YYYY.MM.DD HH24:MI'), 'YYYY.MM.DD') validFromYmd,
			to_char(to_date(a.valid_to, 'YYYY.MM.DD HH24:MI'), 'YYYY.MM.DD') validToYmd,
		    a.title,
		    a.fg_open_result,
		    a.reg_username,
		    (
			    select 
			        count(unique(esa.u_seq)) 
			    from ep_survey_question esq, ep_survey_apply esa
			    where esq.sq_seq = esa.sq_seq
			    and esq.s_seq = a.s_seq    
		    ) as applier,
		    (
		        select 
		            decode(count(unique(esa.u_seq)), 1, 'Y', 'N')
		        from ep_survey_question esq, ep_survey_apply esa
		        where esq.sq_seq = esa.sq_seq
		        and esq.s_seq = a.s_seq    
		        and esa.u_seq = #{uSeq}
		    ) as fg_apply
		    
		from ep_survey a
		where a.fg_delete = 'N'
	
		<if test="fgStatus != null and fgStatus != ''">
			<choose>
				<when test="fgStatus==1">
					and sysdate <![CDATA[<]]> to_date(a.valid_from,'YYYYMMDDHH24MI')
				</when>
				<when test="fgStatus==2">
					and sysdate between to_date(a.valid_from,'YYYYMMDDHH24MI') and to_date(a.valid_to,'YYYYMMDDHH24MI') and a.fg_open = 'Y'
				</when>
				<when test="fgStatus==3">
					and sysdate <![CDATA[>]]> to_date(a.valid_to,'YYYYMMDDHH24MI') and a.fg_open = 'Y'
				</when>
				<otherwise>
				</otherwise>
			</choose>
		</if>
		
		<if test="query != null and query != ''">
			and (a.title like '%' || upper(#{query}) || '%' OR a.reg_username like '%' || upper(#{query}) || '%')
		</if>
		
		order by a.s_seq desc
	</select>
	
	<insert id="insert" parameterType="SurveyEntity" useGeneratedKeys="true" keyProperty="s_seq">
		<selectKey keyProperty="sSeq" resultType="Integer" order="BEFORE">
			select ep_s_seq.nextval from dual
		</selectKey>
		
		insert into ep_survey (s_seq, title, description, valid_from, valid_to, fg_open, fg_open_result, remark, fg_delete, reg_username, reg_date) values (
			#{sSeq}, #{title}, #{description}, #{validFrom}, #{validTo}, #{fgOpen}, #{fgOpenResult}, #{remark}, #{fgDelete}, #{regUsername}, #{regDate}
		)
	</insert>
	
	<update id="update" parameterType="SurveyEntity">
		update ep_survey set
			title=#{title},
			description=#{description},
			valid_from=#{validFrom},
			valid_to=#{validTo},
			fg_open=#{fgOpen},
			fg_open_result=#{fgOpenResult},
			remark=#{remark},
			mod_username=#{modUsername},
			mod_date=#{modDate}
		where
			s_seq=#{sSeq}
	</update>
		
	<update id="delete" parameterType="SurveyEntity">
		update ep_survey set
			fg_delete='Y',
			mod_username=#{modUsername},
			mod_date=#{modDate}
		where
			s_seq=#{sSeq}
			and fg_delete = 'N'
	</update>
	
	<update id="updateUfSeq" parameterType="SurveyEntity">
		update ep_survey set
			uf_seq=#{ufSeq},
			mod_username=#{modUsername},
			mod_date=#{modDate}
		where
			s_seq=#{sSeq}
	</update>
	
	<select id="findUfSeq" parameterType="int" resultType="String">
		select
			uf_seq
		from 
		ep_survey a
		where
		a.s_seq=#{sSeq}
		and a.fg_delete='N'
	</select>
	
	<select id="findUploadFileLists" resultType="EpUploadFileListEntity">
		select
		b.*
		from
		ep_survey a,		
		ep_upload_file_list b
		where
		a.uf_seq = b.uf_seq
        and a.s_seq = b.t_seq
		and a.fg_delete='N'		
		and b.fg_delete='N'
		and a.fg_delete='N'
        and b.fg_delete='N'
        and a.s_seq = #{sSeq}
	</select>
</mapper>