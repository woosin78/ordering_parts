<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.jwebppy.portal.iv.eu.parts.domestic.merchandize.mapper.EuMerchandizeCartMapper">
	
	<!-- 장바구니 리스트 검색 -->
	<select id="findCartItems" resultType="MerchandizeCartEntity" parameterType="MerchandizeCartEntity">
		select mca.mc_seq 
			 , mca.mp_seq
			 , mca.order_qty
			 , #{productImagePath} || (select storage_path || saved_name as image_url from ep_file_upload where t_seq = mca.mp_seq and target = 'MALL' and type = 'THUMBNAIL' and fg_delete != 'Y') image_url
			 , 0 order_price
			 , round(0 * mca.order_qty, 2) order_total_price
			 , mp.material_no 		  
             , mp.material_no || 
               ' | ' || 
               pack_pltf_lang.func_get_lang
               (
               		#{corp}, 
               		null, 
               		null,
			   		(
		                select ld.ld_seq
		                  from pltf_lang_detail ld, pltf_lang_kind lk
		                 where ld.ld_seq in (select ld_seq from ep_mall_lang_rl where t_seq = mca.mp_seq and type='PRODUCT_NAME')
		                   and ld.lk_seq = lk.lk_seq
		                   and lk.basename = #{corp}
		                   and lk.code = 'en'
		           ) 
           	   ) product_name 
			 , pack_pltf_lang.func_get_lang
			   (
			   		#{corp}, 
			   		null, 
			   		null,
			   		(
		                select ld.ld_seq
		                  from pltf_lang_detail ld, pltf_lang_kind lk
		                 where ld.ld_seq in (select ld_seq from ep_mall_lang_rl where t_seq = mca.mp_seq and type='PRODUCT_DESCRIPTION')
		                   and ld.lk_seq = lk.lk_seq
		                   and lk.basename = #{corp}
		                   and lk.code = 'en'
		           )
		   	   ) product_description	 
			 , mca.reg_username	 
			 , mca.reg_date	 
			 , mca.mod_username	 
			 , mca.mod_date
		  from ep_mall_cart mca, ep_mall_category mc, ep_mall_product mp
		 where 1 = 1		   
		   and mca.mc_seq = mc.mc_seq	   		   
		   and mca.mp_seq = mp.mp_seq
		   and mc.mc_seq = mp.mc_seq
		   and mc.corp = #{corp}
		   and mca.reg_username = #{regUsername} 
	</select>
	
	
	<!-- 장바구니 중복 체크 -->
	<select id="findCartDuplicateItem" resultType="MerchandizeCartEntity" parameterType="MerchandizeCartEntity">
		select count(mca.mp_seq) mp_seq
		  from ep_mall_cart mca, ep_mall_category mc
		 where mca.mc_seq = mc.mc_seq	   		   
		   and mca.mc_seq = #{mcSeq}
		   and mca.mp_seq = #{mpSeq}
		   and mc.corp = #{corp}
		   and mca.reg_username = #{regUsername} 
	</select>
	
	
	<!-- 장바구니 등록 -->
	<insert id="insertCartItem" parameterType="MerchandizeCartEntity">		
		insert into ep_mall_cart (
			mc_seq, mp_seq, order_qty, reg_username, reg_date
		) values (
			<choose>
				<when test="mcSeq != null and mcSeq != ''">
			#{mcSeq}, 
				</when>
				<otherwise>
			(select mc_seq from ep_mall_product where mp_seq = #{mpSeq} and fg_delete != 'Y'), 
				</otherwise>
			</choose>
			#{mpSeq}, #{orderQty}, #{regUsername}, #{regDate}
		)
	</insert>
	
	
	<!-- 장바구니 수정 -->
	<update id="updateCartItem" parameterType="MerchandizeCartEntity">
		update ep_mall_cart
		   set mod_date = #{modDate}		     
     		 , mod_username = #{modUsername}
     		 <if test="orderQty != null and orderQty != ''">
     		 , order_qty = #{orderQty}
     		 </if>	
		 where mc_seq = #{mcSeq}	
		   and mp_seq = #{mpSeq}
	</update>
	
	
	<!-- 장바구니 삭제 -->
	<update id="deleteCartItem" parameterType="MerchandizeCartEntity">
		delete from ep_mall_cart
		 where mc_seq = #{mcSeq}	
		   and mp_seq = #{mpSeq}
	</update>
	
	<!-- 장바구니 기존수량 체크 후 분기 -->
	<update id="mergeCartItem" parameterType="MerchandizeCartEntity">
		merge into ep_mall_cart
		using dual
		   on (mp_seq = #{mpSeq} and reg_username = #{regUsername})
		 when matched then
		      update 
		         set mod_username = #{regUsername}
		           , mod_date = sysdate
		           , order_qty = order_qty + #{orderQty}
		       where mp_seq = #{mpSeq}    
		         and mc_seq = (select mc_seq from ep_mall_product where mp_seq = #{mpSeq} and fg_delete != 'Y')
		         and reg_username = #{regUsername}
		 when not matched then
		      insert (mc_seq, mp_seq, order_qty, reg_username, reg_date) 
		      values ((select mc_seq from ep_mall_product where mp_seq = #{mpSeq} and fg_delete != 'Y'), #{mpSeq}, #{orderQty}, #{regUsername}, sysdate)
	</update>
	
</mapper>